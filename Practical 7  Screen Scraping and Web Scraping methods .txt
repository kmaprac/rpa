Practical 7 : Screen Scraping and Web Scraping methods 

a. Automate the following screen scraping methods using UiPath: 

A. Full Text  
B. Native  
C. OCR 

Full Test  
Step1: First we select a new project and give it a name.  
Step2: Take a sequence chart in the designer panel.  
Step3: Open the notepad and put some text.  
Step 4: Select the screen scrapping and select the scrapping method. 
Step 5: Drag and drop a message box and give the variable name automatically created. 
Step 6: Run the file. 
Output: 

Native  
Step1: First we select a new project and give it a name.  
Step2: Take a sequence chart in the designer panel.  
Step3: Open the notepad and put some text.  
Step 4: Select the screen scrapping and select the scrapping 
method 
Step 5: Drag and drop a message box and give the variable name automatically created. 
Step 6: Run the file.  
Output: 
OCR  
Step1: First we select a new project and give it a name.  
Step2: Take a sequence chart in the designer panel.  
Step3: Open the notepad and put some text.  
Step 4: Select the screen scrapping and select the scrapping method. 
Step 5: Drag and drop a message box and give the variable name automatically created. 
Step 6: Run the file. 
Output: 
 
  
b. Demonstrate Data Scraping and display values in Message box. 
Let us see, how to build a data table can be built. First, create an empty project. Give it a 
proper name:  
1. Drag and drop a Flowchart activity on the Designer panel. Also, drag and drop a Sequence 
activity and set it as the Start node. 
2. Double click on the Sequence and drag and drop the Build Data Table activity inside the 
Sequence activity. 
3. Click on the Data Table button. A pop-up window will appear on the screen. Remove both 
the columns (auto generated by the Build Data Table activity) by clicking on the Remove 
Column icon: 
Now, we will add three columns by simply clicking on the + symbol. Specify the column 
names and select the appropriate data types from the drop-down list. Click on the OK button. 
We will add column /BNF of String Data Type, 3PMM@/P of Int32 type and finally Class of 
string type: 
Now enter some random values just to insert the data into the rows: 
Click on the OK button and our data table is ready. We have to iterate over the data table's 
rows to make sure everything works correctly. 
5. In order to store the Data Table created by Build Data Table activity, we have to create a 
data table variable Mydatatable of DataTable type and in order to store the result of the data 
table that we have dynamically built. Also, specify assign the Output property of the Build 
Data Table activity with this variable. Specify the data table variable's name there. 
6. After our data table is ready, we will iterate the data table's rows to make sure everything 
works correctly. Drag and drop the For each row activity from the Activities panel inside the 
Sequence activity. Specify the data table variable's name (MyDataTable) in the expression 
text box of the For each row activity: 
7.Drag and drop the For each row activity from the Activities panel inside the Sequence 
activity. Specify the data table variable's name in the expression text box of the For each row 
activity: 
For each and For each row are two different activities. For each is used to iterate over the 
collections, while the For each row activity is used to iterate over the data table rows. 
Drag and drop a Message box activity inside the For each row activity. In the Message box 
activity, Inside the message box we have to write following string: 
This row variable contains all the columns of a particular row. Hence, we have to specify 
which column value we want to retrieve by specifying the column name. Instead of the 
column name, we can also specify the column index (the column index always starts from 
zero). Hit the Run button to see the result






c. Demonstrate Screen Scraping for a pdf, web page and image file. 
Using data scraping, we can build the data table at runtime. Let us consider an example of 
extracting data from Amazon's website. Perform the following steps:  
1. Drag and drop the Flowchart activity from the Activities panel, and drag and drop the 
Sequence activity inside the Flowchart activity.  
2. Double-click on the Sequence activity.  
3. Drag and drop the Open Browser activity inside the Sequence activity. Specify the URL in 
the text box: 
4. Click on the Data Scraping icon on the top left corner of UiPath Studio. A window will pop 
up. Click on the Next button.  
5. Now, there will be a pointer pointing to the UI elements of the web page. Click on the 
name of the book: 
It will ask you to point to a second similar element on the web page: 
6. Point to a second similar element on that web page. Specify the name that you want to give 
for that extracted data column. (It will become the column name of the extracted data). Click 
on the Next button. 
7. A list of names will appear in a separate window. 
If you want to extract more information, then click on the Extract correlated data button and 
repeat the same process once again (just as we extracted the name of the book from Amazon's 
website). Otherwise, click on the Finish Button: 
8.It will ask you to locate the next page's button/link. If you want to extract more information 
about the product and it spans across multiple pages, then click on the Yes button and point to 
the next page's button/link. Then, click on it. If you want to extract only the current page's 
data, click on the No button, (you can also specify the number of rows that you want to 
extract data from: By default it is 100): 
9.Data scraping generates a data table. (In this case, Extractiondatatable is generated.) 
Change the scope of Extractiondatatable to the Flowchart so that it is accessible within the 
Flowchart activity: 
10.Drag and drop the Output data table activity on the Flowchart. Set the Output property of 
the Output data table activity as: Extractiondatatable:              
11. Connect the Output data table activity to the Data Scraping activity. Drag and drop the 
Message box activity on the Designer window. Also create a string variable to receive the text 
from the Output data table activity (in our case, we have created a result variable). Specify 
the text property of the Output data table activity as the result variable to receive the text 
from the Output data table: 
12. Connect the Message box activity to the Output data table activity. Double-click on the 
Message box and specify the text property as result variable (the variable that you created to 
receive the text from the Output data table activity).  
13. Hit the Run button and see the result. 
